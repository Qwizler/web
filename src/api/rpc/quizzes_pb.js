// source: quizzes.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.quiz.v1.AddQuestionRequest', null, global);
goog.exportSymbol('proto.quiz.v1.AddQuestionResponse', null, global);
goog.exportSymbol('proto.quiz.v1.AnswerResult', null, global);
goog.exportSymbol('proto.quiz.v1.Audit', null, global);
goog.exportSymbol('proto.quiz.v1.Choice', null, global);
goog.exportSymbol('proto.quiz.v1.CreateChoiceRequest', null, global);
goog.exportSymbol('proto.quiz.v1.CreateChoiceResponse', null, global);
goog.exportSymbol('proto.quiz.v1.CreateQuizRequest', null, global);
goog.exportSymbol('proto.quiz.v1.CreateQuizResponse', null, global);
goog.exportSymbol('proto.quiz.v1.DeleteChoiceRequest', null, global);
goog.exportSymbol('proto.quiz.v1.DeleteChoiceResponse', null, global);
goog.exportSymbol('proto.quiz.v1.DeleteQuestionRequest', null, global);
goog.exportSymbol('proto.quiz.v1.DeleteQuestionResponse', null, global);
goog.exportSymbol('proto.quiz.v1.DeleteQuizRequest', null, global);
goog.exportSymbol('proto.quiz.v1.DeleteQuizResponse', null, global);
goog.exportSymbol('proto.quiz.v1.Difficulty', null, global);
goog.exportSymbol('proto.quiz.v1.GetQuizRequest', null, global);
goog.exportSymbol('proto.quiz.v1.GetQuizResponse', null, global);
goog.exportSymbol('proto.quiz.v1.ListChoiceRequest', null, global);
goog.exportSymbol('proto.quiz.v1.ListChoiceResponse', null, global);
goog.exportSymbol('proto.quiz.v1.ListQuestionRequest', null, global);
goog.exportSymbol('proto.quiz.v1.ListQuestionResponse', null, global);
goog.exportSymbol('proto.quiz.v1.ListQuizRequest', null, global);
goog.exportSymbol('proto.quiz.v1.ListQuizResponse', null, global);
goog.exportSymbol('proto.quiz.v1.Pagination', null, global);
goog.exportSymbol('proto.quiz.v1.Quiz', null, global);
goog.exportSymbol('proto.quiz.v1.QuizQuestion', null, global);
goog.exportSymbol('proto.quiz.v1.SearchQuizRequest', null, global);
goog.exportSymbol('proto.quiz.v1.SearchQuizResponse', null, global);
goog.exportSymbol('proto.quiz.v1.UpdateChoiceRequest', null, global);
goog.exportSymbol('proto.quiz.v1.UpdateChoiceResponse', null, global);
goog.exportSymbol('proto.quiz.v1.UpdateQuestionRequest', null, global);
goog.exportSymbol('proto.quiz.v1.UpdateQuestionResponse', null, global);
goog.exportSymbol('proto.quiz.v1.UpdateQuizRequest', null, global);
goog.exportSymbol('proto.quiz.v1.UpdateQuizResponse', null, global);
goog.exportSymbol('proto.quiz.v1.ValidateQuestionAnswersRequest', null, global);
goog.exportSymbol('proto.quiz.v1.ValidateQuestionAnswersResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.Audit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.Audit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.Audit.displayName = 'proto.quiz.v1.Audit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.Pagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.Pagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.Pagination.displayName = 'proto.quiz.v1.Pagination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.Choice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.Choice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.Choice.displayName = 'proto.quiz.v1.Choice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.QuizQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.QuizQuestion.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.QuizQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.QuizQuestion.displayName = 'proto.quiz.v1.QuizQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.Quiz = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.Quiz.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.Quiz, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.Quiz.displayName = 'proto.quiz.v1.Quiz';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.CreateQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.CreateQuizRequest.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.CreateQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.CreateQuizRequest.displayName = 'proto.quiz.v1.CreateQuizRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.CreateQuizResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.CreateQuizResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.CreateQuizResponse.displayName = 'proto.quiz.v1.CreateQuizResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.GetQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.GetQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.GetQuizRequest.displayName = 'proto.quiz.v1.GetQuizRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.GetQuizResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.GetQuizResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.GetQuizResponse.displayName = 'proto.quiz.v1.GetQuizResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ListQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.ListQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ListQuizRequest.displayName = 'proto.quiz.v1.ListQuizRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ListQuizResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.ListQuizResponse.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.ListQuizResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ListQuizResponse.displayName = 'proto.quiz.v1.ListQuizResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.UpdateQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.UpdateQuizRequest.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.UpdateQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.UpdateQuizRequest.displayName = 'proto.quiz.v1.UpdateQuizRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.UpdateQuizResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.UpdateQuizResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.UpdateQuizResponse.displayName = 'proto.quiz.v1.UpdateQuizResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.DeleteQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.DeleteQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.DeleteQuizRequest.displayName = 'proto.quiz.v1.DeleteQuizRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.DeleteQuizResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.DeleteQuizResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.DeleteQuizResponse.displayName = 'proto.quiz.v1.DeleteQuizResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.SearchQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.SearchQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.SearchQuizRequest.displayName = 'proto.quiz.v1.SearchQuizRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.SearchQuizResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.SearchQuizResponse.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.SearchQuizResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.SearchQuizResponse.displayName = 'proto.quiz.v1.SearchQuizResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.AddQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.AddQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.AddQuestionRequest.displayName = 'proto.quiz.v1.AddQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.AddQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.AddQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.AddQuestionResponse.displayName = 'proto.quiz.v1.AddQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.UpdateQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.UpdateQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.UpdateQuestionRequest.displayName = 'proto.quiz.v1.UpdateQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.UpdateQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.UpdateQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.UpdateQuestionResponse.displayName = 'proto.quiz.v1.UpdateQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.DeleteQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.DeleteQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.DeleteQuestionRequest.displayName = 'proto.quiz.v1.DeleteQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.DeleteQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.DeleteQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.DeleteQuestionResponse.displayName = 'proto.quiz.v1.DeleteQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ListQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.ListQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ListQuestionRequest.displayName = 'proto.quiz.v1.ListQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ListQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.ListQuestionResponse.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.ListQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ListQuestionResponse.displayName = 'proto.quiz.v1.ListQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.CreateChoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.CreateChoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.CreateChoiceRequest.displayName = 'proto.quiz.v1.CreateChoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.CreateChoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.CreateChoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.CreateChoiceResponse.displayName = 'proto.quiz.v1.CreateChoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.UpdateChoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.UpdateChoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.UpdateChoiceRequest.displayName = 'proto.quiz.v1.UpdateChoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.UpdateChoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.UpdateChoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.UpdateChoiceResponse.displayName = 'proto.quiz.v1.UpdateChoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.DeleteChoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.DeleteChoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.DeleteChoiceRequest.displayName = 'proto.quiz.v1.DeleteChoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.DeleteChoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.DeleteChoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.DeleteChoiceResponse.displayName = 'proto.quiz.v1.DeleteChoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ListChoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.ListChoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ListChoiceRequest.displayName = 'proto.quiz.v1.ListChoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ListChoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.ListChoiceResponse.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.ListChoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ListChoiceResponse.displayName = 'proto.quiz.v1.ListChoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.AnswerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.quiz.v1.AnswerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.AnswerResult.displayName = 'proto.quiz.v1.AnswerResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ValidateQuestionAnswersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.ValidateQuestionAnswersRequest.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.ValidateQuestionAnswersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ValidateQuestionAnswersRequest.displayName = 'proto.quiz.v1.ValidateQuestionAnswersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quiz.v1.ValidateQuestionAnswersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quiz.v1.ValidateQuestionAnswersResponse.repeatedFields_, null);
};
goog.inherits(proto.quiz.v1.ValidateQuestionAnswersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quiz.v1.ValidateQuestionAnswersResponse.displayName = 'proto.quiz.v1.ValidateQuestionAnswersResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.Audit.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.Audit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.Audit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Audit.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdBy: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deletedBy: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    deletedAt: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.Audit}
 */
proto.quiz.v1.Audit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.Audit;
  return proto.quiz.v1.Audit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.Audit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.Audit}
 */
proto.quiz.v1.Audit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeletedBy(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeletedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.Audit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.Audit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.Audit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Audit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDeletedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string created_by = 1;
 * @return {string}
 */
proto.quiz.v1.Audit.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.setCreatedBy = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.clearCreatedBy = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Audit.prototype.hasCreatedBy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string updated_by = 2;
 * @return {string}
 */
proto.quiz.v1.Audit.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.clearUpdatedBy = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Audit.prototype.hasUpdatedBy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string deleted_by = 3;
 * @return {string}
 */
proto.quiz.v1.Audit.prototype.getDeletedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.setDeletedBy = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.clearDeletedBy = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Audit.prototype.hasDeletedBy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string created_at = 4;
 * @return {string}
 */
proto.quiz.v1.Audit.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_at = 5;
 * @return {string}
 */
proto.quiz.v1.Audit.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string deleted_at = 6;
 * @return {string}
 */
proto.quiz.v1.Audit.prototype.getDeletedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Audit} returns this
 */
proto.quiz.v1.Audit.prototype.setDeletedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.Pagination.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.Pagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.Pagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Pagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.Pagination}
 */
proto.quiz.v1.Pagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.Pagination;
  return proto.quiz.v1.Pagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.Pagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.Pagination}
 */
proto.quiz.v1.Pagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.Pagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.Pagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.Pagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Pagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 page = 1;
 * @return {number}
 */
proto.quiz.v1.Pagination.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.Pagination} returns this
 */
proto.quiz.v1.Pagination.prototype.setPage = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Pagination} returns this
 */
proto.quiz.v1.Pagination.prototype.clearPage = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Pagination.prototype.hasPage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.quiz.v1.Pagination.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.Pagination} returns this
 */
proto.quiz.v1.Pagination.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Pagination} returns this
 */
proto.quiz.v1.Pagination.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Pagination.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.Choice.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.Choice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.Choice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Choice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    choice: jspb.Message.getFieldWithDefault(msg, 2, ""),
    order: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    isCorrect: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.Choice}
 */
proto.quiz.v1.Choice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.Choice;
  return proto.quiz.v1.Choice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.Choice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.Choice}
 */
proto.quiz.v1.Choice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChoice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrder(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCorrect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.Choice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.Choice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.Choice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Choice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChoice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getIsCorrect();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.quiz.v1.Choice.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Choice} returns this
 */
proto.quiz.v1.Choice.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string choice = 2;
 * @return {string}
 */
proto.quiz.v1.Choice.prototype.getChoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Choice} returns this
 */
proto.quiz.v1.Choice.prototype.setChoice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float order = 3;
 * @return {number}
 */
proto.quiz.v1.Choice.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.Choice} returns this
 */
proto.quiz.v1.Choice.prototype.setOrder = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool is_correct = 4;
 * @return {boolean}
 */
proto.quiz.v1.Choice.prototype.getIsCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.quiz.v1.Choice} returns this
 */
proto.quiz.v1.Choice.prototype.setIsCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.QuizQuestion.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.QuizQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.QuizQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.QuizQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.QuizQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    question: jspb.Message.getFieldWithDefault(msg, 2, ""),
    answersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    correctAnswer: jspb.Message.getFieldWithDefault(msg, 4, 0),
    difficulty: jspb.Message.getFieldWithDefault(msg, 5, 0),
    audit: (f = msg.getAudit()) && proto.quiz.v1.Audit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.QuizQuestion}
 */
proto.quiz.v1.QuizQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.QuizQuestion;
  return proto.quiz.v1.QuizQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.QuizQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.QuizQuestion}
 */
proto.quiz.v1.QuizQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAnswers(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCorrectAnswer(value);
      break;
    case 5:
      var value = /** @type {!proto.quiz.v1.Difficulty} */ (reader.readEnum());
      msg.setDifficulty(value);
      break;
    case 6:
      var value = new proto.quiz.v1.Audit;
      reader.readMessage(value,proto.quiz.v1.Audit.deserializeBinaryFromReader);
      msg.setAudit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.QuizQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.QuizQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.QuizQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.QuizQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCorrectAnswer();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getAudit();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.quiz.v1.Audit.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.quiz.v1.QuizQuestion.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question = 2;
 * @return {string}
 */
proto.quiz.v1.QuizQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string answers = 3;
 * @return {!Array<string>}
 */
proto.quiz.v1.QuizQuestion.prototype.getAnswersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.setAnswersList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.addAnswers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};


/**
 * optional uint32 correct_answer = 4;
 * @return {number}
 */
proto.quiz.v1.QuizQuestion.prototype.getCorrectAnswer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.setCorrectAnswer = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Difficulty difficulty = 5;
 * @return {!proto.quiz.v1.Difficulty}
 */
proto.quiz.v1.QuizQuestion.prototype.getDifficulty = function() {
  return /** @type {!proto.quiz.v1.Difficulty} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.quiz.v1.Difficulty} value
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.setDifficulty = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Audit audit = 6;
 * @return {?proto.quiz.v1.Audit}
 */
proto.quiz.v1.QuizQuestion.prototype.getAudit = function() {
  return /** @type{?proto.quiz.v1.Audit} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Audit, 6));
};


/**
 * @param {?proto.quiz.v1.Audit|undefined} value
 * @return {!proto.quiz.v1.QuizQuestion} returns this
*/
proto.quiz.v1.QuizQuestion.prototype.setAudit = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.QuizQuestion} returns this
 */
proto.quiz.v1.QuizQuestion.prototype.clearAudit = function() {
  return this.setAudit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.QuizQuestion.prototype.hasAudit = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.Quiz.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.Quiz.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.Quiz.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.Quiz} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Quiz.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 5, 0),
    difficulty: jspb.Message.getFieldWithDefault(msg, 6, 0),
    thumbnail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    cover: jspb.Message.getFieldWithDefault(msg, 8, ""),
    category: jspb.Message.getFieldWithDefault(msg, 9, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    audit: (f = msg.getAudit()) && proto.quiz.v1.Audit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.Quiz}
 */
proto.quiz.v1.Quiz.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.Quiz;
  return proto.quiz.v1.Quiz.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.Quiz} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.Quiz}
 */
proto.quiz.v1.Quiz.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDuration(value);
      break;
    case 6:
      var value = /** @type {!proto.quiz.v1.Difficulty} */ (reader.readEnum());
      msg.setDifficulty(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCover(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 11:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 12:
      var value = new proto.quiz.v1.Audit;
      reader.readMessage(value,proto.quiz.v1.Audit.deserializeBinaryFromReader);
      msg.setAudit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.Quiz.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.Quiz.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.Quiz} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.Quiz.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {!proto.quiz.v1.Difficulty} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAudit();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.quiz.v1.Audit.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.quiz.v1.Quiz.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.quiz.v1.Quiz.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.quiz.v1.Quiz.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.quiz.v1.Quiz.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 duration = 5;
 * @return {number}
 */
proto.quiz.v1.Quiz.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Quiz.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Difficulty difficulty = 6;
 * @return {!proto.quiz.v1.Difficulty}
 */
proto.quiz.v1.Quiz.prototype.getDifficulty = function() {
  return /** @type {!proto.quiz.v1.Difficulty} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.quiz.v1.Difficulty} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setDifficulty = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearDifficulty = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Quiz.prototype.hasDifficulty = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string thumbnail = 7;
 * @return {string}
 */
proto.quiz.v1.Quiz.prototype.getThumbnail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setThumbnail = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearThumbnail = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Quiz.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string cover = 8;
 * @return {string}
 */
proto.quiz.v1.Quiz.prototype.getCover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setCover = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearCover = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Quiz.prototype.hasCover = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string category = 9;
 * @return {string}
 */
proto.quiz.v1.Quiz.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setCategory = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearCategory = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Quiz.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated string tags = 10;
 * @return {!Array<string>}
 */
proto.quiz.v1.Quiz.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * map<string, string> metadata = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.quiz.v1.Quiz.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;
};


/**
 * optional Audit audit = 12;
 * @return {?proto.quiz.v1.Audit}
 */
proto.quiz.v1.Quiz.prototype.getAudit = function() {
  return /** @type{?proto.quiz.v1.Audit} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Audit, 12));
};


/**
 * @param {?proto.quiz.v1.Audit|undefined} value
 * @return {!proto.quiz.v1.Quiz} returns this
*/
proto.quiz.v1.Quiz.prototype.setAudit = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.Quiz} returns this
 */
proto.quiz.v1.Quiz.prototype.clearAudit = function() {
  return this.setAudit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.Quiz.prototype.hasAudit = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.CreateQuizRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.CreateQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.CreateQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.CreateQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 3, 0),
    thumbnail: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cover: jspb.Message.getFieldWithDefault(msg, 5, ""),
    category: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.CreateQuizRequest}
 */
proto.quiz.v1.CreateQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.CreateQuizRequest;
  return proto.quiz.v1.CreateQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.CreateQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.CreateQuizRequest}
 */
proto.quiz.v1.CreateQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDuration(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCover(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 8:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.CreateQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.CreateQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.CreateQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 duration = 3;
 * @return {number}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.CreateQuizRequest.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string thumbnail = 4;
 * @return {string}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getThumbnail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.setThumbnail = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.clearThumbnail = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.CreateQuizRequest.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string cover = 5;
 * @return {string}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getCover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.setCover = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.clearCover = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.CreateQuizRequest.prototype.hasCover = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string category = 6;
 * @return {string}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.setCategory = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.clearCategory = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.CreateQuizRequest.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated string tags = 7;
 * @return {!Array<string>}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * map<string, string> metadata = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.quiz.v1.CreateQuizRequest.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.quiz.v1.CreateQuizRequest} returns this
 */
proto.quiz.v1.CreateQuizRequest.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.CreateQuizResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.CreateQuizResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.CreateQuizResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateQuizResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quiz: (f = msg.getQuiz()) && proto.quiz.v1.Quiz.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.CreateQuizResponse}
 */
proto.quiz.v1.CreateQuizResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.CreateQuizResponse;
  return proto.quiz.v1.CreateQuizResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.CreateQuizResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.CreateQuizResponse}
 */
proto.quiz.v1.CreateQuizResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.Quiz;
      reader.readMessage(value,proto.quiz.v1.Quiz.deserializeBinaryFromReader);
      msg.setQuiz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.CreateQuizResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.CreateQuizResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.CreateQuizResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateQuizResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuiz();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quiz.v1.Quiz.serializeBinaryToWriter
    );
  }
};


/**
 * optional Quiz quiz = 1;
 * @return {?proto.quiz.v1.Quiz}
 */
proto.quiz.v1.CreateQuizResponse.prototype.getQuiz = function() {
  return /** @type{?proto.quiz.v1.Quiz} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Quiz, 1));
};


/**
 * @param {?proto.quiz.v1.Quiz|undefined} value
 * @return {!proto.quiz.v1.CreateQuizResponse} returns this
*/
proto.quiz.v1.CreateQuizResponse.prototype.setQuiz = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.CreateQuizResponse} returns this
 */
proto.quiz.v1.CreateQuizResponse.prototype.clearQuiz = function() {
  return this.setQuiz(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.CreateQuizResponse.prototype.hasQuiz = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.GetQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.GetQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.GetQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.GetQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.GetQuizRequest}
 */
proto.quiz.v1.GetQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.GetQuizRequest;
  return proto.quiz.v1.GetQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.GetQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.GetQuizRequest}
 */
proto.quiz.v1.GetQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.GetQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.GetQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.GetQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.GetQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.quiz.v1.GetQuizRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.GetQuizRequest} returns this
 */
proto.quiz.v1.GetQuizRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.GetQuizResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.GetQuizResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.GetQuizResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.GetQuizResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quiz: (f = msg.getQuiz()) && proto.quiz.v1.Quiz.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.GetQuizResponse}
 */
proto.quiz.v1.GetQuizResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.GetQuizResponse;
  return proto.quiz.v1.GetQuizResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.GetQuizResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.GetQuizResponse}
 */
proto.quiz.v1.GetQuizResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.Quiz;
      reader.readMessage(value,proto.quiz.v1.Quiz.deserializeBinaryFromReader);
      msg.setQuiz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.GetQuizResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.GetQuizResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.GetQuizResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.GetQuizResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuiz();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quiz.v1.Quiz.serializeBinaryToWriter
    );
  }
};


/**
 * optional Quiz quiz = 1;
 * @return {?proto.quiz.v1.Quiz}
 */
proto.quiz.v1.GetQuizResponse.prototype.getQuiz = function() {
  return /** @type{?proto.quiz.v1.Quiz} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Quiz, 1));
};


/**
 * @param {?proto.quiz.v1.Quiz|undefined} value
 * @return {!proto.quiz.v1.GetQuizResponse} returns this
*/
proto.quiz.v1.GetQuizResponse.prototype.setQuiz = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.GetQuizResponse} returns this
 */
proto.quiz.v1.GetQuizResponse.prototype.clearQuiz = function() {
  return this.setQuiz(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.GetQuizResponse.prototype.hasQuiz = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ListQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ListQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ListQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.quiz.v1.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ListQuizRequest}
 */
proto.quiz.v1.ListQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ListQuizRequest;
  return proto.quiz.v1.ListQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ListQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ListQuizRequest}
 */
proto.quiz.v1.ListQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.quiz.v1.Pagination;
      reader.readMessage(value,proto.quiz.v1.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ListQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ListQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ListQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quiz.v1.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.quiz.v1.Pagination}
 */
proto.quiz.v1.ListQuizRequest.prototype.getPagination = function() {
  return /** @type{?proto.quiz.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Pagination, 2));
};


/**
 * @param {?proto.quiz.v1.Pagination|undefined} value
 * @return {!proto.quiz.v1.ListQuizRequest} returns this
*/
proto.quiz.v1.ListQuizRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.ListQuizRequest} returns this
 */
proto.quiz.v1.ListQuizRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.ListQuizRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.ListQuizResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ListQuizResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ListQuizResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ListQuizResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuizResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizzesList: jspb.Message.toObjectList(msg.getQuizzesList(),
    proto.quiz.v1.Quiz.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto.quiz.v1.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ListQuizResponse}
 */
proto.quiz.v1.ListQuizResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ListQuizResponse;
  return proto.quiz.v1.ListQuizResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ListQuizResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ListQuizResponse}
 */
proto.quiz.v1.ListQuizResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.Quiz;
      reader.readMessage(value,proto.quiz.v1.Quiz.deserializeBinaryFromReader);
      msg.addQuizzes(value);
      break;
    case 2:
      var value = new proto.quiz.v1.Pagination;
      reader.readMessage(value,proto.quiz.v1.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ListQuizResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ListQuizResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ListQuizResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuizResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizzesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quiz.v1.Quiz.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quiz.v1.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Quiz quizzes = 1;
 * @return {!Array<!proto.quiz.v1.Quiz>}
 */
proto.quiz.v1.ListQuizResponse.prototype.getQuizzesList = function() {
  return /** @type{!Array<!proto.quiz.v1.Quiz>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quiz.v1.Quiz, 1));
};


/**
 * @param {!Array<!proto.quiz.v1.Quiz>} value
 * @return {!proto.quiz.v1.ListQuizResponse} returns this
*/
proto.quiz.v1.ListQuizResponse.prototype.setQuizzesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quiz.v1.Quiz=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.Quiz}
 */
proto.quiz.v1.ListQuizResponse.prototype.addQuizzes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quiz.v1.Quiz, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.ListQuizResponse} returns this
 */
proto.quiz.v1.ListQuizResponse.prototype.clearQuizzesList = function() {
  return this.setQuizzesList([]);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.quiz.v1.Pagination}
 */
proto.quiz.v1.ListQuizResponse.prototype.getPagination = function() {
  return /** @type{?proto.quiz.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Pagination, 2));
};


/**
 * @param {?proto.quiz.v1.Pagination|undefined} value
 * @return {!proto.quiz.v1.ListQuizResponse} returns this
*/
proto.quiz.v1.ListQuizResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.ListQuizResponse} returns this
 */
proto.quiz.v1.ListQuizResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.ListQuizResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.UpdateQuizRequest.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.UpdateQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.UpdateQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 4, 0),
    thumbnail: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cover: jspb.Message.getFieldWithDefault(msg, 6, ""),
    category: jspb.Message.getFieldWithDefault(msg, 7, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.UpdateQuizRequest}
 */
proto.quiz.v1.UpdateQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.UpdateQuizRequest;
  return proto.quiz.v1.UpdateQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.UpdateQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.UpdateQuizRequest}
 */
proto.quiz.v1.UpdateQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDuration(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCover(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 9:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.UpdateQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.UpdateQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setTitle = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearTitle = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 duration = 4;
 * @return {number}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string thumbnail = 5;
 * @return {string}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getThumbnail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setThumbnail = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearThumbnail = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string cover = 6;
 * @return {string}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getCover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setCover = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearCover = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.hasCover = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string category = 7;
 * @return {string}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setCategory = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearCategory = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string tags = 8;
 * @return {!Array<string>}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * map<string, string> metadata = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.quiz.v1.UpdateQuizRequest.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.quiz.v1.UpdateQuizRequest} returns this
 */
proto.quiz.v1.UpdateQuizRequest.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.UpdateQuizResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.UpdateQuizResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.UpdateQuizResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuizResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quiz: (f = msg.getQuiz()) && proto.quiz.v1.Quiz.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.UpdateQuizResponse}
 */
proto.quiz.v1.UpdateQuizResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.UpdateQuizResponse;
  return proto.quiz.v1.UpdateQuizResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.UpdateQuizResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.UpdateQuizResponse}
 */
proto.quiz.v1.UpdateQuizResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.Quiz;
      reader.readMessage(value,proto.quiz.v1.Quiz.deserializeBinaryFromReader);
      msg.setQuiz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.UpdateQuizResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.UpdateQuizResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.UpdateQuizResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuizResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuiz();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.quiz.v1.Quiz.serializeBinaryToWriter
    );
  }
};


/**
 * optional Quiz quiz = 1;
 * @return {?proto.quiz.v1.Quiz}
 */
proto.quiz.v1.UpdateQuizResponse.prototype.getQuiz = function() {
  return /** @type{?proto.quiz.v1.Quiz} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Quiz, 1));
};


/**
 * @param {?proto.quiz.v1.Quiz|undefined} value
 * @return {!proto.quiz.v1.UpdateQuizResponse} returns this
*/
proto.quiz.v1.UpdateQuizResponse.prototype.setQuiz = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuizResponse} returns this
 */
proto.quiz.v1.UpdateQuizResponse.prototype.clearQuiz = function() {
  return this.setQuiz(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuizResponse.prototype.hasQuiz = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.DeleteQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.DeleteQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.DeleteQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.DeleteQuizRequest}
 */
proto.quiz.v1.DeleteQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.DeleteQuizRequest;
  return proto.quiz.v1.DeleteQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.DeleteQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.DeleteQuizRequest}
 */
proto.quiz.v1.DeleteQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.DeleteQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.DeleteQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.DeleteQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.quiz.v1.DeleteQuizRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteQuizRequest} returns this
 */
proto.quiz.v1.DeleteQuizRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.DeleteQuizResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.DeleteQuizResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.DeleteQuizResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuizResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.DeleteQuizResponse}
 */
proto.quiz.v1.DeleteQuizResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.DeleteQuizResponse;
  return proto.quiz.v1.DeleteQuizResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.DeleteQuizResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.DeleteQuizResponse}
 */
proto.quiz.v1.DeleteQuizResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.DeleteQuizResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.DeleteQuizResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.DeleteQuizResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuizResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.quiz.v1.DeleteQuizResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteQuizResponse} returns this
 */
proto.quiz.v1.DeleteQuizResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.SearchQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.SearchQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.SearchQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.SearchQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.quiz.v1.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.SearchQuizRequest}
 */
proto.quiz.v1.SearchQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.SearchQuizRequest;
  return proto.quiz.v1.SearchQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.SearchQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.SearchQuizRequest}
 */
proto.quiz.v1.SearchQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = new proto.quiz.v1.Pagination;
      reader.readMessage(value,proto.quiz.v1.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.SearchQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.SearchQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.SearchQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.SearchQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quiz.v1.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.quiz.v1.SearchQuizRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.SearchQuizRequest} returns this
 */
proto.quiz.v1.SearchQuizRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.quiz.v1.Pagination}
 */
proto.quiz.v1.SearchQuizRequest.prototype.getPagination = function() {
  return /** @type{?proto.quiz.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Pagination, 2));
};


/**
 * @param {?proto.quiz.v1.Pagination|undefined} value
 * @return {!proto.quiz.v1.SearchQuizRequest} returns this
*/
proto.quiz.v1.SearchQuizRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.SearchQuizRequest} returns this
 */
proto.quiz.v1.SearchQuizRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.SearchQuizRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.SearchQuizResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.SearchQuizResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.SearchQuizResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.SearchQuizResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.SearchQuizResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizzesList: jspb.Message.toObjectList(msg.getQuizzesList(),
    proto.quiz.v1.Quiz.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && proto.quiz.v1.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.SearchQuizResponse}
 */
proto.quiz.v1.SearchQuizResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.SearchQuizResponse;
  return proto.quiz.v1.SearchQuizResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.SearchQuizResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.SearchQuizResponse}
 */
proto.quiz.v1.SearchQuizResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.Quiz;
      reader.readMessage(value,proto.quiz.v1.Quiz.deserializeBinaryFromReader);
      msg.addQuizzes(value);
      break;
    case 2:
      var value = new proto.quiz.v1.Pagination;
      reader.readMessage(value,proto.quiz.v1.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.SearchQuizResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.SearchQuizResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.SearchQuizResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.SearchQuizResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizzesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quiz.v1.Quiz.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quiz.v1.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Quiz quizzes = 1;
 * @return {!Array<!proto.quiz.v1.Quiz>}
 */
proto.quiz.v1.SearchQuizResponse.prototype.getQuizzesList = function() {
  return /** @type{!Array<!proto.quiz.v1.Quiz>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quiz.v1.Quiz, 1));
};


/**
 * @param {!Array<!proto.quiz.v1.Quiz>} value
 * @return {!proto.quiz.v1.SearchQuizResponse} returns this
*/
proto.quiz.v1.SearchQuizResponse.prototype.setQuizzesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quiz.v1.Quiz=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.Quiz}
 */
proto.quiz.v1.SearchQuizResponse.prototype.addQuizzes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quiz.v1.Quiz, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.SearchQuizResponse} returns this
 */
proto.quiz.v1.SearchQuizResponse.prototype.clearQuizzesList = function() {
  return this.setQuizzesList([]);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.quiz.v1.Pagination}
 */
proto.quiz.v1.SearchQuizResponse.prototype.getPagination = function() {
  return /** @type{?proto.quiz.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Pagination, 2));
};


/**
 * @param {?proto.quiz.v1.Pagination|undefined} value
 * @return {!proto.quiz.v1.SearchQuizResponse} returns this
*/
proto.quiz.v1.SearchQuizResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.SearchQuizResponse} returns this
 */
proto.quiz.v1.SearchQuizResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.SearchQuizResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.AddQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.AddQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.AddQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.AddQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    question: jspb.Message.getFieldWithDefault(msg, 2, ""),
    difficulty: jspb.Message.getFieldWithDefault(msg, 5, 0),
    order: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.AddQuestionRequest}
 */
proto.quiz.v1.AddQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.AddQuestionRequest;
  return proto.quiz.v1.AddQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.AddQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.AddQuestionRequest}
 */
proto.quiz.v1.AddQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 5:
      var value = /** @type {!proto.quiz.v1.Difficulty} */ (reader.readEnum());
      msg.setDifficulty(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.AddQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.AddQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.AddQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.AddQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.AddQuestionRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.AddQuestionRequest} returns this
 */
proto.quiz.v1.AddQuestionRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question = 2;
 * @return {string}
 */
proto.quiz.v1.AddQuestionRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.AddQuestionRequest} returns this
 */
proto.quiz.v1.AddQuestionRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Difficulty difficulty = 5;
 * @return {!proto.quiz.v1.Difficulty}
 */
proto.quiz.v1.AddQuestionRequest.prototype.getDifficulty = function() {
  return /** @type {!proto.quiz.v1.Difficulty} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.quiz.v1.Difficulty} value
 * @return {!proto.quiz.v1.AddQuestionRequest} returns this
 */
proto.quiz.v1.AddQuestionRequest.prototype.setDifficulty = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional float order = 6;
 * @return {number}
 */
proto.quiz.v1.AddQuestionRequest.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.AddQuestionRequest} returns this
 */
proto.quiz.v1.AddQuestionRequest.prototype.setOrder = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.AddQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.AddQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.AddQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.AddQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    question: (f = msg.getQuestion()) && proto.quiz.v1.QuizQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.AddQuestionResponse}
 */
proto.quiz.v1.AddQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.AddQuestionResponse;
  return proto.quiz.v1.AddQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.AddQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.AddQuestionResponse}
 */
proto.quiz.v1.AddQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = new proto.quiz.v1.QuizQuestion;
      reader.readMessage(value,proto.quiz.v1.QuizQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.AddQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.AddQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.AddQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.AddQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.quiz.v1.QuizQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.AddQuestionResponse.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.AddQuestionResponse} returns this
 */
proto.quiz.v1.AddQuestionResponse.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional QuizQuestion question = 2;
 * @return {?proto.quiz.v1.QuizQuestion}
 */
proto.quiz.v1.AddQuestionResponse.prototype.getQuestion = function() {
  return /** @type{?proto.quiz.v1.QuizQuestion} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.QuizQuestion, 2));
};


/**
 * @param {?proto.quiz.v1.QuizQuestion|undefined} value
 * @return {!proto.quiz.v1.AddQuestionResponse} returns this
*/
proto.quiz.v1.AddQuestionResponse.prototype.setQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.AddQuestionResponse} returns this
 */
proto.quiz.v1.AddQuestionResponse.prototype.clearQuestion = function() {
  return this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.AddQuestionResponse.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.UpdateQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.UpdateQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    question: (f = msg.getQuestion()) && proto.quiz.v1.QuizQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.UpdateQuestionRequest}
 */
proto.quiz.v1.UpdateQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.UpdateQuestionRequest;
  return proto.quiz.v1.UpdateQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.UpdateQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.UpdateQuestionRequest}
 */
proto.quiz.v1.UpdateQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = new proto.quiz.v1.QuizQuestion;
      reader.readMessage(value,proto.quiz.v1.QuizQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.UpdateQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.UpdateQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.quiz.v1.QuizQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuestionRequest} returns this
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuestionRequest} returns this
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional QuizQuestion question = 3;
 * @return {?proto.quiz.v1.QuizQuestion}
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.getQuestion = function() {
  return /** @type{?proto.quiz.v1.QuizQuestion} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.QuizQuestion, 3));
};


/**
 * @param {?proto.quiz.v1.QuizQuestion|undefined} value
 * @return {!proto.quiz.v1.UpdateQuestionRequest} returns this
*/
proto.quiz.v1.UpdateQuestionRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuestionRequest} returns this
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.clearQuestion = function() {
  return this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuestionRequest.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.UpdateQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.UpdateQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    question: (f = msg.getQuestion()) && proto.quiz.v1.QuizQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.UpdateQuestionResponse}
 */
proto.quiz.v1.UpdateQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.UpdateQuestionResponse;
  return proto.quiz.v1.UpdateQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.UpdateQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.UpdateQuestionResponse}
 */
proto.quiz.v1.UpdateQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = new proto.quiz.v1.QuizQuestion;
      reader.readMessage(value,proto.quiz.v1.QuizQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.UpdateQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.UpdateQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.quiz.v1.QuizQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuestionResponse} returns this
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateQuestionResponse} returns this
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional QuizQuestion question = 3;
 * @return {?proto.quiz.v1.QuizQuestion}
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.getQuestion = function() {
  return /** @type{?proto.quiz.v1.QuizQuestion} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.QuizQuestion, 3));
};


/**
 * @param {?proto.quiz.v1.QuizQuestion|undefined} value
 * @return {!proto.quiz.v1.UpdateQuestionResponse} returns this
*/
proto.quiz.v1.UpdateQuestionResponse.prototype.setQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.UpdateQuestionResponse} returns this
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.clearQuestion = function() {
  return this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateQuestionResponse.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.DeleteQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.DeleteQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.DeleteQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.DeleteQuestionRequest}
 */
proto.quiz.v1.DeleteQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.DeleteQuestionRequest;
  return proto.quiz.v1.DeleteQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.DeleteQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.DeleteQuestionRequest}
 */
proto.quiz.v1.DeleteQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.DeleteQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.DeleteQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.DeleteQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.DeleteQuestionRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteQuestionRequest} returns this
 */
proto.quiz.v1.DeleteQuestionRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.DeleteQuestionRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteQuestionRequest} returns this
 */
proto.quiz.v1.DeleteQuestionRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.DeleteQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.DeleteQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.DeleteQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.DeleteQuestionResponse}
 */
proto.quiz.v1.DeleteQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.DeleteQuestionResponse;
  return proto.quiz.v1.DeleteQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.DeleteQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.DeleteQuestionResponse}
 */
proto.quiz.v1.DeleteQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.DeleteQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.DeleteQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.DeleteQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.DeleteQuestionResponse.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteQuestionResponse} returns this
 */
proto.quiz.v1.DeleteQuestionResponse.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ListQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ListQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ListQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ListQuestionRequest}
 */
proto.quiz.v1.ListQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ListQuestionRequest;
  return proto.quiz.v1.ListQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ListQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ListQuestionRequest}
 */
proto.quiz.v1.ListQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ListQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ListQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ListQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.ListQuestionRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.ListQuestionRequest} returns this
 */
proto.quiz.v1.ListQuestionRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.ListQuestionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ListQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ListQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ListQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
    proto.quiz.v1.QuizQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ListQuestionResponse}
 */
proto.quiz.v1.ListQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ListQuestionResponse;
  return proto.quiz.v1.ListQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ListQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ListQuestionResponse}
 */
proto.quiz.v1.ListQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.QuizQuestion;
      reader.readMessage(value,proto.quiz.v1.QuizQuestion.deserializeBinaryFromReader);
      msg.addQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ListQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ListQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ListQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quiz.v1.QuizQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QuizQuestion questions = 1;
 * @return {!Array<!proto.quiz.v1.QuizQuestion>}
 */
proto.quiz.v1.ListQuestionResponse.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.quiz.v1.QuizQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quiz.v1.QuizQuestion, 1));
};


/**
 * @param {!Array<!proto.quiz.v1.QuizQuestion>} value
 * @return {!proto.quiz.v1.ListQuestionResponse} returns this
*/
proto.quiz.v1.ListQuestionResponse.prototype.setQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quiz.v1.QuizQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.QuizQuestion}
 */
proto.quiz.v1.ListQuestionResponse.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quiz.v1.QuizQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.ListQuestionResponse} returns this
 */
proto.quiz.v1.ListQuestionResponse.prototype.clearQuestionsList = function() {
  return this.setQuestionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.CreateChoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.CreateChoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.CreateChoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateChoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    choice: jspb.Message.getFieldWithDefault(msg, 3, ""),
    order: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    isCorrect: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.CreateChoiceRequest}
 */
proto.quiz.v1.CreateChoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.CreateChoiceRequest;
  return proto.quiz.v1.CreateChoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.CreateChoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.CreateChoiceRequest}
 */
proto.quiz.v1.CreateChoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChoice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrder(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCorrect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.CreateChoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.CreateChoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.CreateChoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateChoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getIsCorrect();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.CreateChoiceRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateChoiceRequest} returns this
 */
proto.quiz.v1.CreateChoiceRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.CreateChoiceRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateChoiceRequest} returns this
 */
proto.quiz.v1.CreateChoiceRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string choice = 3;
 * @return {string}
 */
proto.quiz.v1.CreateChoiceRequest.prototype.getChoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateChoiceRequest} returns this
 */
proto.quiz.v1.CreateChoiceRequest.prototype.setChoice = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float order = 4;
 * @return {number}
 */
proto.quiz.v1.CreateChoiceRequest.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.CreateChoiceRequest} returns this
 */
proto.quiz.v1.CreateChoiceRequest.prototype.setOrder = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional bool is_correct = 5;
 * @return {boolean}
 */
proto.quiz.v1.CreateChoiceRequest.prototype.getIsCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.quiz.v1.CreateChoiceRequest} returns this
 */
proto.quiz.v1.CreateChoiceRequest.prototype.setIsCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.CreateChoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.CreateChoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.CreateChoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateChoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    choice: (f = msg.getChoice()) && proto.quiz.v1.Choice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.CreateChoiceResponse}
 */
proto.quiz.v1.CreateChoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.CreateChoiceResponse;
  return proto.quiz.v1.CreateChoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.CreateChoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.CreateChoiceResponse}
 */
proto.quiz.v1.CreateChoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = new proto.quiz.v1.Choice;
      reader.readMessage(value,proto.quiz.v1.Choice.deserializeBinaryFromReader);
      msg.setChoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.CreateChoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.CreateChoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.CreateChoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.CreateChoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.quiz.v1.Choice.serializeBinaryToWriter
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.CreateChoiceResponse.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateChoiceResponse} returns this
 */
proto.quiz.v1.CreateChoiceResponse.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.CreateChoiceResponse.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.CreateChoiceResponse} returns this
 */
proto.quiz.v1.CreateChoiceResponse.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Choice choice = 3;
 * @return {?proto.quiz.v1.Choice}
 */
proto.quiz.v1.CreateChoiceResponse.prototype.getChoice = function() {
  return /** @type{?proto.quiz.v1.Choice} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Choice, 3));
};


/**
 * @param {?proto.quiz.v1.Choice|undefined} value
 * @return {!proto.quiz.v1.CreateChoiceResponse} returns this
*/
proto.quiz.v1.CreateChoiceResponse.prototype.setChoice = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.CreateChoiceResponse} returns this
 */
proto.quiz.v1.CreateChoiceResponse.prototype.clearChoice = function() {
  return this.setChoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.CreateChoiceResponse.prototype.hasChoice = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.UpdateChoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.UpdateChoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateChoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    choiceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    choice: jspb.Message.getFieldWithDefault(msg, 4, ""),
    order: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    isCorrect: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.UpdateChoiceRequest}
 */
proto.quiz.v1.UpdateChoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.UpdateChoiceRequest;
  return proto.quiz.v1.UpdateChoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.UpdateChoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.UpdateChoiceRequest}
 */
proto.quiz.v1.UpdateChoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChoiceId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChoice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrder(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCorrect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.UpdateChoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.UpdateChoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateChoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoiceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChoice();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getIsCorrect();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateChoiceRequest} returns this
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateChoiceRequest} returns this
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string choice_id = 3;
 * @return {string}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.getChoiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateChoiceRequest} returns this
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.setChoiceId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string choice = 4;
 * @return {string}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.getChoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateChoiceRequest} returns this
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.setChoice = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional float order = 5;
 * @return {number}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.quiz.v1.UpdateChoiceRequest} returns this
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.setOrder = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool is_correct = 6;
 * @return {boolean}
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.getIsCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.quiz.v1.UpdateChoiceRequest} returns this
 */
proto.quiz.v1.UpdateChoiceRequest.prototype.setIsCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.UpdateChoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.UpdateChoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateChoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    choiceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    choice: (f = msg.getChoice()) && proto.quiz.v1.Choice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.UpdateChoiceResponse}
 */
proto.quiz.v1.UpdateChoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.UpdateChoiceResponse;
  return proto.quiz.v1.UpdateChoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.UpdateChoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.UpdateChoiceResponse}
 */
proto.quiz.v1.UpdateChoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChoiceId(value);
      break;
    case 4:
      var value = new proto.quiz.v1.Choice;
      reader.readMessage(value,proto.quiz.v1.Choice.deserializeBinaryFromReader);
      msg.setChoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.UpdateChoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.UpdateChoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.UpdateChoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoiceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChoice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.quiz.v1.Choice.serializeBinaryToWriter
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateChoiceResponse} returns this
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateChoiceResponse} returns this
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string choice_id = 3;
 * @return {string}
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.getChoiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.UpdateChoiceResponse} returns this
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.setChoiceId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Choice choice = 4;
 * @return {?proto.quiz.v1.Choice}
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.getChoice = function() {
  return /** @type{?proto.quiz.v1.Choice} */ (
    jspb.Message.getWrapperField(this, proto.quiz.v1.Choice, 4));
};


/**
 * @param {?proto.quiz.v1.Choice|undefined} value
 * @return {!proto.quiz.v1.UpdateChoiceResponse} returns this
*/
proto.quiz.v1.UpdateChoiceResponse.prototype.setChoice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quiz.v1.UpdateChoiceResponse} returns this
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.clearChoice = function() {
  return this.setChoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quiz.v1.UpdateChoiceResponse.prototype.hasChoice = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.DeleteChoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.DeleteChoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteChoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    choiceId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.DeleteChoiceRequest}
 */
proto.quiz.v1.DeleteChoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.DeleteChoiceRequest;
  return proto.quiz.v1.DeleteChoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.DeleteChoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.DeleteChoiceRequest}
 */
proto.quiz.v1.DeleteChoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChoiceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.DeleteChoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.DeleteChoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteChoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoiceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteChoiceRequest} returns this
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteChoiceRequest} returns this
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string choice_id = 3;
 * @return {string}
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.getChoiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteChoiceRequest} returns this
 */
proto.quiz.v1.DeleteChoiceRequest.prototype.setChoiceId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.DeleteChoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.DeleteChoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.DeleteChoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteChoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.DeleteChoiceResponse}
 */
proto.quiz.v1.DeleteChoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.DeleteChoiceResponse;
  return proto.quiz.v1.DeleteChoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.DeleteChoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.DeleteChoiceResponse}
 */
proto.quiz.v1.DeleteChoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.DeleteChoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.DeleteChoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.DeleteChoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.DeleteChoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.DeleteChoiceResponse.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.DeleteChoiceResponse} returns this
 */
proto.quiz.v1.DeleteChoiceResponse.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ListChoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ListChoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ListChoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListChoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ListChoiceRequest}
 */
proto.quiz.v1.ListChoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ListChoiceRequest;
  return proto.quiz.v1.ListChoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ListChoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ListChoiceRequest}
 */
proto.quiz.v1.ListChoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ListChoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ListChoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ListChoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListChoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.ListChoiceRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.ListChoiceRequest} returns this
 */
proto.quiz.v1.ListChoiceRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.ListChoiceRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.ListChoiceRequest} returns this
 */
proto.quiz.v1.ListChoiceRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.ListChoiceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ListChoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ListChoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ListChoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListChoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    choicesList: jspb.Message.toObjectList(msg.getChoicesList(),
    proto.quiz.v1.Choice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ListChoiceResponse}
 */
proto.quiz.v1.ListChoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ListChoiceResponse;
  return proto.quiz.v1.ListChoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ListChoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ListChoiceResponse}
 */
proto.quiz.v1.ListChoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.Choice;
      reader.readMessage(value,proto.quiz.v1.Choice.deserializeBinaryFromReader);
      msg.addChoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ListChoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ListChoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ListChoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ListChoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quiz.v1.Choice.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Choice choices = 1;
 * @return {!Array<!proto.quiz.v1.Choice>}
 */
proto.quiz.v1.ListChoiceResponse.prototype.getChoicesList = function() {
  return /** @type{!Array<!proto.quiz.v1.Choice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quiz.v1.Choice, 1));
};


/**
 * @param {!Array<!proto.quiz.v1.Choice>} value
 * @return {!proto.quiz.v1.ListChoiceResponse} returns this
*/
proto.quiz.v1.ListChoiceResponse.prototype.setChoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quiz.v1.Choice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.Choice}
 */
proto.quiz.v1.ListChoiceResponse.prototype.addChoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quiz.v1.Choice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.ListChoiceResponse} returns this
 */
proto.quiz.v1.ListChoiceResponse.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.AnswerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.AnswerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.AnswerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.AnswerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    answer: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isCorrect: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.AnswerResult}
 */
proto.quiz.v1.AnswerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.AnswerResult;
  return proto.quiz.v1.AnswerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.AnswerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.AnswerResult}
 */
proto.quiz.v1.AnswerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCorrect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.AnswerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.AnswerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.AnswerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.AnswerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsCorrect();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string answer = 1;
 * @return {string}
 */
proto.quiz.v1.AnswerResult.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.AnswerResult} returns this
 */
proto.quiz.v1.AnswerResult.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_correct = 2;
 * @return {boolean}
 */
proto.quiz.v1.AnswerResult.prototype.getIsCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.quiz.v1.AnswerResult} returns this
 */
proto.quiz.v1.AnswerResult.prototype.setIsCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ValidateQuestionAnswersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ValidateQuestionAnswersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    answersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ValidateQuestionAnswersRequest}
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ValidateQuestionAnswersRequest;
  return proto.quiz.v1.ValidateQuestionAnswersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ValidateQuestionAnswersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ValidateQuestionAnswersRequest}
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuizId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ValidateQuestionAnswersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ValidateQuestionAnswersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string quiz_id = 1;
 * @return {string}
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.getQuizId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.ValidateQuestionAnswersRequest} returns this
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.setQuizId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.quiz.v1.ValidateQuestionAnswersRequest} returns this
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string answers = 3;
 * @return {!Array<string>}
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.getAnswersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.quiz.v1.ValidateQuestionAnswersRequest} returns this
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.setAnswersList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.ValidateQuestionAnswersRequest} returns this
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.addAnswers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.ValidateQuestionAnswersRequest} returns this
 */
proto.quiz.v1.ValidateQuestionAnswersRequest.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.quiz.v1.ValidateQuestionAnswersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quiz.v1.ValidateQuestionAnswersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.quiz.v1.AnswerResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quiz.v1.ValidateQuestionAnswersResponse}
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quiz.v1.ValidateQuestionAnswersResponse;
  return proto.quiz.v1.ValidateQuestionAnswersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quiz.v1.ValidateQuestionAnswersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quiz.v1.ValidateQuestionAnswersResponse}
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.quiz.v1.AnswerResult;
      reader.readMessage(value,proto.quiz.v1.AnswerResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quiz.v1.ValidateQuestionAnswersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quiz.v1.ValidateQuestionAnswersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.quiz.v1.AnswerResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AnswerResult results = 1;
 * @return {!Array<!proto.quiz.v1.AnswerResult>}
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.quiz.v1.AnswerResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quiz.v1.AnswerResult, 1));
};


/**
 * @param {!Array<!proto.quiz.v1.AnswerResult>} value
 * @return {!proto.quiz.v1.ValidateQuestionAnswersResponse} returns this
*/
proto.quiz.v1.ValidateQuestionAnswersResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.quiz.v1.AnswerResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quiz.v1.AnswerResult}
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.quiz.v1.AnswerResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quiz.v1.ValidateQuestionAnswersResponse} returns this
 */
proto.quiz.v1.ValidateQuestionAnswersResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * @enum {number}
 */
proto.quiz.v1.Difficulty = {
  EASY: 0,
  MEDIUM: 1,
  HARD: 2,
  EXPERT: 3
};

goog.object.extend(exports, proto.quiz.v1);
